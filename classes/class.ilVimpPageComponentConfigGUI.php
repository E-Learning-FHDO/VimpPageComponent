<?php

declare(strict_types=1);

require_once __DIR__ . "/../vendor/autoload.php";

use srag\Plugins\VimpPageComponent\Config\ConfigFormGUI;


/**
 * Class ilVimpPageComponentConfigGUI
 * @ilCtrl_IsCalledBy ilVimpPageComponentConfigGUI: ilObjComponentSettingsGUI
 * Generated by SrPluginGenerator v1.0.0
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
class ilVimpPageComponentConfigGUI extends ilPluginConfigGUI
{
    const PLUGIN_CLASS_NAME = ilVimpPageComponentPlugin::class;
    const CMD_CONFIGURE = "configure";
    const CMD_UPDATE_CONFIGURE = "updateConfigure";
    const LANG_MODULE = "config";
    const TAB_CONFIGURATION = "configuration";
    private ilViMPPlugin $pl;
    /**
     * @var \ILIAS\DI\Container|mixed
     */
    private $dic;
    /**
     * @var mixed
     */
    private $tpl;


    /**
     * ilVimpPageComponentConfigGUI constructor
     */
    public function __construct()
    {
        global $DIC;
        $this->dic = $DIC;
        $this->pl = ilViMPPlugin::getInstance();
        $this->tpl = $DIC['tpl'];
    }


    /**
     * @inheritDoc
     * @throws ilCtrlException
     */
    public function performCommand(string $cmd): void
    {
        $this->setTabs();

        $next_class = $this->dic->ctrl()->getNextClass($this);

        switch (strtolower($next_class)) {
            default:
                $cmd = $this->dic->ctrl()->getCmd();

                switch ($cmd) {
                    case self::CMD_CONFIGURE:
                    case self::CMD_UPDATE_CONFIGURE:
                        $this->{$cmd}();
                        break;

                    default:
                        break;
                }
                break;
        }
    }


    /**
     *
     * @throws ilCtrlException
     */
    protected function setTabs(): void
    {
        $this->dic->tabs()->addTab(self::TAB_CONFIGURATION, $this->pl->txt("configuration"), $this->dic->ctrl()
            ->getLinkTargetByClass(self::class, self::CMD_CONFIGURE));

        //$this->dic->locator()->addItem(ilVimpPageComponentPlugin::PLUGIN_NAME, $this->dic->ctrl()->getLinkTarget($this, self::CMD_CONFIGURE));
    }


    /**
     * @return ConfigFormGUI
     */
    protected function getConfigForm() : ConfigFormGUI
    {
        return new ConfigFormGUI($this);
    }


    /**
     *
     */
    protected function configure(): void
    {
        $this->dic->tabs()->activateTab(self::TAB_CONFIGURATION);

        $confForm = new ilPropertyFormGUI();
        // Token Cache TTL
        $input = new ilNumberInputGUI("", "");
        $input->setInfo("_info");
        $confForm->addItem($input);

        $this->tpl->setContent($confForm->getHTML());
    }


    /**
     *
     * @throws ilCtrlException
     */
    protected function updateConfigure(): void
    {
        $this->dic->tabs()->activateTab(self::TAB_CONFIGURATION);

        $form = $this->getConfigForm();

        if (!$form->storeForm()) {
            $this->tpl->setContent($form->getHTML());
            return;
        }


        $this->dic->ui()->mainTemplate()->setOnScreenMessage('success', $this->pl->txt('configuration_saved'));
        $this->dic->ctrl()->redirect($this,self::CMD_CONFIGURE);
    }
}
